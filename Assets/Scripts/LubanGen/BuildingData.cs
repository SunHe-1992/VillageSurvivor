
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class BuildingData : Luban.BeanBase
{
    public BuildingData(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["Name"].IsString) { throw new SerializationException(); }  Name = _buf["Name"]; }
        { if(!_buf["Visible"].IsBoolean) { throw new SerializationException(); }  Visible = _buf["Visible"]; }
        { if(!_buf["Category"].IsString) { throw new SerializationException(); }  Category = _buf["Category"]; }
        { if(!_buf["Effect"].IsNumber) { throw new SerializationException(); }  Effect = (SLG.BuildingEffect)_buf["Effect"].AsInt; }
        { if(!_buf["WorkLoad"].IsNumber) { throw new SerializationException(); }  WorkLoad = _buf["WorkLoad"]; }
        { if(!_buf["Price"].IsNumber) { throw new SerializationException(); }  Price = _buf["Price"]; }
        { if(!_buf["ModelName"].IsString) { throw new SerializationException(); }  ModelName = _buf["ModelName"]; }
        { if(!_buf["Description"].IsString) { throw new SerializationException(); }  Description = _buf["Description"]; }
    }

    public static BuildingData DeserializeBuildingData(JSONNode _buf)
    {
        return new BuildingData(_buf);
    }

    public readonly int ID;
    /// <summary>
    /// building Name
    /// </summary>
    public readonly string Name;
    public readonly bool Visible;
    public readonly string Category;
    public readonly SLG.BuildingEffect Effect;
    public readonly float WorkLoad;
    public readonly float Price;
    public readonly string ModelName;
    public readonly string Description;
   
    public const int __ID__ = -818589538;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Visible:" + Visible + ","
        + "Category:" + Category + ","
        + "Effect:" + Effect + ","
        + "WorkLoad:" + WorkLoad + ","
        + "Price:" + Price + ","
        + "ModelName:" + ModelName + ","
        + "Description:" + Description + ","
        + "}";
    }
}

}
